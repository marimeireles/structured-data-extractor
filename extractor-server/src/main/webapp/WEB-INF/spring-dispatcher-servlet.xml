<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">
	
	<!-- Load extractor-application.properties -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	  <property name="locations">
	    <list>
	        <value>file://#{systemProperties['extractor.home']}/conf/extractor.properties</value>
	        <value>classpath:extractor.properties</value>
	        <!-- Load version.properties from the classpath -->
	        <value>classpath:version.properties</value>
	    </list>
	  </property>
	  <property name="properties">  
		<props>  
		   <prop key="project.version">project.version</prop>
		   <prop key="timestamp">timestamp</prop>  
		</props>  
	  </property>
	  <property name="ignoreResourceNotFound" value="true" />
	</bean>

		
    <!-- scan les annotations pour trouver notamment @Controller et @Autowired -->
    <context:component-scan base-package="fr.sparna.rdf.extractor"/>

	<!-- Maps /** to the DefaultServletHandler -->
	<mvc:default-servlet-handler />
	<mvc:annotation-driven/>

	<!-- 	Resolves the view names to JSP in the /WEB-INF/jsp/ folder 
			(eg. if Controller returns view name "edit", the jsp /WEB-INF/jsp/edit.jsp will ba called)
	-->
	<bean	id="viewResolver"
			class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
    	<property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- For file upload -->
    <bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
    </bean>
    
    <mvc:interceptors>
		<bean class="org.springframework.web.servlet.mvc.WebContentInterceptor" p:cacheSeconds="86400" p:alwaysUseFullPath="true" >
		    <property name="cacheMappings">
		        <props>
		            <!-- cache for one month -->
		            <prop key="/cache/me/**">2592000</prop>
		        </props>
		    </property>
		</bean>
	</mvc:interceptors>
    
    <!-- Application Config singleton. Factory-method gets the instance via the singleton method -->
	<!-- The bean is autowired and configured with @Value annotations -->
	<bean id="applicationConfig" class="fr.sparna.rdf.extractor.web.Config" factory-method="getInstance">
<!-- 		<property name="repository" value="http://167.114.233.33:8080/openrdf-sesame/repositories/grify" /> -->
		<property name="repository" value="${extractor.target.repository}" />
	</bean>
	
	<bean id="applicationData" class="fr.sparna.rdf.extractor.web.ApplicationData">	
		<property name="buildVersion" value="${build.version:unknown}" />
		<property name="buildTimestamp" value="${build.timestamp:unknown}" />
	</bean>
	
	<!-- Register applicationData in the ServletContext, so that it is accessible in JSP JSTL -->
	<bean class="org.springframework.web.context.support.ServletContextAttributeExporter">
        <property name="attributes">
            <map>
                <entry key="applicationData" value-ref="applicationData" />
            </map>
        </property>
    </bean>
    
    <bean id="handlerFactory" class="fr.sparna.rdf.extractor.DataExtractorHandlerFactory">
    	<property name="filterXhtml" value="true" />
    	<property name="autoTrim" value="true" />
    	<property name="filterEmpty" value="true" />
    	<property name="filterRdfa" value="true" />     
    	<property name="normalizeHttpSchemaOrg" value="true" />	
    	<property name="excludedProperties"><ref bean="excludedProperties"/></property>
    </bean>
    
    <util:list id="excludedProperties">
    	<value>https://api.w.org/</value>
    </util:list>
    
    <bean id="extractorFactory" class="fr.sparna.rdf.extractor.WebPageExtractorFactory">
    	<property name="extractJsonLd" value="true" />
    	<property name="extractMicrodata" value="true" />
    	<property name="extractRdfa" value="true" />
    	<property name="extractContent" value="true" />
    </bean>
    
    <bean id="theExtractor" 
    	class="fr.sparna.rdf.extractor.CompositeExtractor"
    	factory-bean="extractorFactory"
    	factory-method="buildExtractor"
    />
    


</beans>